{
    "Comment": "Access keys rotation workflow",
    "StartAt": "Get Expired Keys",
    "States": {
        "Get Expired Keys": {
            "Type": "Parallel",
            "End": true,
            "Branches": [
                {
                    "StartAt": "GetEmployeeKeys",
                    "States": {
                        "GetEmployeeKeys": {
                            "Type": "Task",
                            "Resource": "${get_expired_users}",
                            "Parameters": {
                                "UserPath": "/employees/",
                                "KeyAge": 1
                            },
                            "Next": "ProccessEmployeeKeys"
                        },
                        "ProccessEmployeeKeys": {
                            "Type": "Map",
                            "ItemsPath": "$.Users",
                            "MaxConcurrency": 0,
                            "Iterator": {
                                "StartAt": "DisableEmployeeKeys",
                                "States": {
                                    "DisableEmployeeKeys": {
                                        "Type": "Task",
                                        "Resource": "${process_expired_keys}",
                                        "Retry": [
                                            {
                                                "ErrorEquals": [
                                                    "TimeOut"
                                                ],
                                                "IntervalSeconds": 1,
                                                "BackoffRate": 2,
                                                "MaxAttempts": 3
                                            }
                                        ],
                                        "End": true
                                    }
                                }
                            },
                            "End": true
                        }
                    }
                },
                {
                    "StartAt": "GetServiceAccountsKey",
                    "States": {
                        "GetServiceAccountsKey": {
                            "Type": "Task",
                            "Resource": "${get_expired_users}",
                            "Parameters": {
                                "UserPath": "/service-accounts/",
                                "KeyAge": 1
                            },
                            "Next": "ProccessServiceOwnerKeys"
                        },
                        "ProccessServiceOwnerKeys": {
                            "Type": "Map",
                            "ItemsPath": "$.Users",
                            "MaxConcurrency": 0,
                            "Iterator": {
                                "StartAt": "NotifyServiceOwner",
                                "States": {
                                    "NotifyServiceOwner": {
                                        "Type": "Task",
                                        "Resource": "${notify_service_user_owner}",
                                        "Retry": [
                                            {
                                                "ErrorEquals": [
                                                    "TimeOut"
                                                ],
                                                "IntervalSeconds": 1,
                                                "BackoffRate": 2,
                                                "MaxAttempts": 3
                                            }
                                        ],
                                        "End": true
                                    }
                                }
                            },
                            "End": true
                        }
                    }
                }
            ],
            "Catch": [
                {
                    "ErrorEquals": [
                        "States.ALL"
                    ],
                    "ResultPath": "$.GetKeyError",
                    "Next": "SendError"
                }
            ]
        },
        "SendError": {
            "Type": "Task",
            "Resource": "arn:aws:states:::sns:publish",
            "Parameters": {
                "TopicArn": "${admin_sns_topic}",
                "Message": {
                    "KeyRotationError.$": "$.GetKeyError"
                }
            },
            "End": true
        }
    }
}